<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.miaow.framework.mapper.system.SysOperationLogMapper">

    <resultMap type="cn.miaow.framework.entity.system.SysOperationLog" id="SysOperationLogResult">
        <id property="operationId" column="operation_id"/>
        <result property="title" column="title"/>
        <result property="businessType" column="business_type"/>
        <result property="method" column="method"/>
        <result property="requestMethod" column="request_method"/>
        <result property="operatorType" column="operator_type"/>
        <result property="operationName" column="operation_name"/>
        <result property="deptName" column="dept_name"/>
        <result property="operationUrl" column="operation_url"/>
        <result property="operationIp" column="operation_ip"/>
        <result property="operationLocation" column="operation_location"/>
        <result property="operationParam" column="operation_param"/>
        <result property="jsonResult" column="json_result"/>
        <result property="status" column="status"/>
        <result property="errorMsg" column="error_msg"/>
        <result property="operationTime" column="operation_time"/>
        <result property="costTime" column="cost_time"/>
    </resultMap>

    <sql id="selectOperationLogVo">
        select operation_id,
               title,
               business_type,
               method,
               request_method,
               operator_type,
               operation_name,
               dept_name,
               operation_url,
               operation_ip,
               operation_location,
               operation_param,
               json_result,
               status,
               error_msg,
               operation_time,
               cost_time
        from sys_operation_log
    </sql>

    <insert id="insertOperationLog" parameterType="cn.miaow.framework.entity.system.SysOperationLog">
        insert into sys_operation_log(title, business_type, method, request_method, operator_type, operation_name, dept_name,
                                 operation_url, operation_ip, operation_location, operation_param, json_result, status, error_msg,
                                 cost_time, operation_time)
        values (#{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{operationName}, #{deptName},
                #{operationUrl}, #{operationIp}, #{operationLocation}, #{operationParam}, #{jsonResult}, #{status}, #{errorMsg},
                #{costTime}, sysdate())
    </insert>

    <select id="selectOperationLogList" parameterType="cn.miaow.framework.entity.system.SysOperationLog" resultMap="SysOperationLogResult">
        <include refid="selectOperationLogVo"/>
        <where>
            <if test="title != null and title != ''">
                AND title like concat('%', #{title}, '%')
            </if>
            <if test="businessType != null">
                AND business_type = #{businessType}
            </if>
            <if test="businessTypes != null and businessTypes.length > 0">
                AND business_type in
                <foreach collection="businessTypes" item="businessType" open="(" separator="," close=")">
                    #{businessType}
                </foreach>
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="operationName != null and operationName != ''">
                AND operation_name like concat('%', #{operationName}, '%')
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND operation_time &gt;= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND operation_time &lt;= #{params.endTime}
            </if>
        </where>
        order by operation_id desc
    </select>

    <delete id="deleteOperationLogByIds" parameterType="Long">
        delete from sys_operation_log where operation_id in
        <foreach collection="array" item="operationId" open="(" separator="," close=")">
            #{operationId}
        </foreach>
    </delete>

    <select id="selectOperationLogById" parameterType="Long" resultMap="SysOperationLogResult">
        <include refid="selectOperationLogVo"/>
        where operation_id = #{operationId}
    </select>

    <update id="cleanOperationLog">
        truncate table sys_operation_log
    </update>

</mapper> 